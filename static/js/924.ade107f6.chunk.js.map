{"version":3,"file":"static/js/924.ade107f6.chunk.js","mappings":"oLAiDA,UAvCmB,SAAC,GAA6B,IAA3BA,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SACrBC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAoEC,EAAAA,EAAAA,KAA5DC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,WAAYC,EAA5C,EAA4CA,QAASC,EAArD,EAAqDA,YAErDC,EAAAA,EAAAA,YAAU,WACNC,GAEH,GAAE,CAACZ,IAEJ,IAAMY,EAAa,WAGf,OAFAJ,IAEQT,GACJ,IAAK,QACDO,EAASN,GAAIa,KAAKC,GAAcD,MAAK,kBAAMH,EAAW,YAAjB,IACrC,MACJ,IAAK,YACDH,EAAaP,GAAIa,KAAKC,GACjBD,MAAK,kBAAMH,EAAW,YAAjB,IACV,MACJ,QACI,MAAM,IAAIK,MAAM,SAE3B,EAEKD,EAAe,SAACX,GAClBC,EAAQD,EACX,EAGD,OACI,iCACI,SAAC,IAAD,KACCa,EAAAA,EAAAA,GAAWP,EAASX,EAAWK,KAG3C,C,oEC5BD,EAjBiB,WACb,OACI,iCACI,cAAGc,UAAU,eAAb,2DACA,iBAAKA,UAAU,WAAf,WACI,iBAAKA,UAAU,yBAAf,WACI,gBAAKA,UAAU,4BACf,gBAAKA,UAAU,6BAEnB,gBAAKA,UAAU,2BACf,gBAAKA,UAAU,2BACf,gBAAKA,UAAU,+BAI9B,E,oBCID,EAfmB,SAACR,EAASX,EAAWK,GACpC,OAAQM,GACJ,IAAK,UACD,OAAO,SAAC,EAAD,IACX,IAAK,UACD,OAAO,SAAC,IAAD,IACX,IAAK,YACD,OAAO,SAACX,EAAD,CAAWK,KAAMA,IAC5B,IAAK,QACD,OAAO,SAACe,EAAA,EAAD,IACX,QACI,MAAM,IAAIH,MAAM,4BAE3B,C","sources":["components/pages/SinglePage.js","components/skeleton/Skeleton.js","utils/setContent.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport setContent from '../../utils/setContent';\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\n\r\n\r\nconst SinglePage = ({ Component, dataType }) => {\r\n    const { id } = useParams();\r\n    const [data, setData] = useState(null);\r\n    const { getComic, getCharacter, clearError, process, setProcess } = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateData()\r\n        // eslint-disable-next-line\r\n    }, [id])\r\n\r\n    const updateData = () => {\r\n        clearError();\r\n\r\n        switch (dataType) {\r\n            case 'comic':\r\n                getComic(id).then(onDataLoaded).then(() => setProcess('confirmed'));\r\n                break;\r\n            case 'character':\r\n                getCharacter(id).then(onDataLoaded)\r\n                    .then(() => setProcess('confirmed'));\r\n                break;\r\n            default:\r\n                throw new Error('error')\r\n        }\r\n    }\r\n\r\n    const onDataLoaded = (data) => {\r\n        setData(data);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <AppBanner />\r\n            {setContent(process, Component, data)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SinglePage;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Skeleton from '../components/skeleton/Skeleton';\r\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\r\nimport Spinner from '../components/spinner/SpinnerMain'\r\n\r\n\r\n\r\nconst setContent = (process, Component, data) => {\r\n    switch (process) {\r\n        case 'waiting':\r\n            return <Skeleton />;\r\n        case 'loading':\r\n            return <Spinner />;\r\n        case 'confirmed':\r\n            return <Component data={data} />;\r\n        case 'error':\r\n            return <ErrorMessage />;\r\n        default:\r\n            throw new Error('Unexpected process state');\r\n    }\r\n}\r\n\r\nexport default setContent;"],"names":["Component","dataType","id","useParams","useState","data","setData","useMarvelService","getComic","getCharacter","clearError","process","setProcess","useEffect","updateData","then","onDataLoaded","Error","setContent","className","ErrorMessage"],"sourceRoot":""}
{"version":3,"file":"static/js/453.8038e675.chunk.js","mappings":"8OASMA,EAAa,SAACC,EAASC,EAAWC,GACpC,OAAQF,GACJ,IAAK,UACD,OAAO,SAAC,IAAD,IACX,IAAK,UACD,OAAOE,GAAiB,SAACD,EAAD,KAAgB,SAAC,IAAD,IAC5C,IAAK,YACD,OAAO,SAACA,EAAD,IACX,IAAK,QACD,OAAO,SAACE,EAAA,EAAD,IACX,QACI,MAAM,IAAIC,MAAM,4BAE3B,EAqED,EAnEmB,WAEf,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA4CF,EAAAA,EAAAA,WAAS,GAArD,eAAOH,EAAP,KAAuBM,EAAvB,KACA,GAA4BH,EAAAA,EAAAA,UAAS,GAArC,eAAOI,EAAP,KAAeC,EAAf,KACA,GAAsCL,EAAAA,EAAAA,WAAS,GAA/C,eAAOM,EAAP,KAAoBC,EAApB,KAEA,GAA8CC,EAAAA,EAAAA,KAAtCC,EAAR,EAAQA,aAAcd,EAAtB,EAAsBA,QAASe,EAA/B,EAA+BA,YAE/BC,EAAAA,EAAAA,YAAU,WACNC,EAAUR,GAAQ,EAErB,GAAE,IAEH,IAAMQ,EAAY,SAACR,EAAQS,GACbV,GAAVU,GACAJ,EAAaL,GACRU,KAAKC,GACLD,MAAK,kBAAMJ,EAAW,YAAjB,GACb,EAEKK,EAAqB,SAACC,GACxB,IAAIC,GAAQ,EACRD,EAAcE,OAAS,IACvBD,GAAQ,GAEZf,EAAc,GAAD,eAAKD,IAAL,OAAoBe,KACjCb,GAAkB,GAClBE,EAAUD,EAAS,GACnBG,EAAeU,EAClB,EAuBD,OACI,iBAAKE,UAAU,eAAf,UACKzB,EAAWC,GAAS,kBAvB7B,SAAqByB,GACjB,IAAMC,EAAQD,EAAIE,KAAI,SAACC,EAAMC,GACzB,OACI,eAAIL,UAAU,eAAd,UACI,UAAC,KAAD,CAAMM,GAAE,kBAAaF,EAAKG,IAA1B,WACI,gBAAKC,IAAKJ,EAAKK,UAAWC,IAAKN,EAAKO,MAAOX,UAAU,sBACrD,gBAAKA,UAAU,oBAAf,SAAoCI,EAAKO,SACzC,gBAAKX,UAAU,qBAAf,SAAqCI,EAAKQ,YAJhBP,EAQzC,IAED,OACI,eAAIL,UAAU,eAAd,SACKE,GAGZ,CAKkCW,CAAY/B,EAAlB,GAA+BJ,IACpD,mBACIoC,SAAUpC,EACVqC,MAAO,CAAE,QAAW5B,EAAc,OAAS,SAC3Ca,UAAU,mCACVgB,QAAS,kBAAMvB,EAAUR,EAAhB,EAJb,UAKI,gBAAKe,UAAU,QAAf,2BAIf,E,UCjED,EApBmB,WACf,OACI,+BACI,UAAC,KAAD,YACI,UAAC,KAAD,YACI,iBACIiB,KAAK,cACLC,QAAQ,kCAEZ,+CAEJ,SAACC,EAAA,EAAD,KACA,SAAC,EAAD,CAAYC,KAAK,gBAMhC,C,iFClBc,SAASC,EAAmBpB,GACzC,OCJa,SAA4BA,GACzC,GAAIqB,MAAMC,QAAQtB,GAAM,OAAO,EAAAuB,EAAA,GAAiBvB,EAClD,CDES,CAAkBA,IELZ,SAA0BwB,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,EACtH,CFGmC,CAAgBxB,KAAQ,EAAA4B,EAAA,GAA2B5B,IGLvE,WACb,MAAM,IAAI6B,UAAU,uIACtB,CHG8F,EAC9F,C","sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/SpinnerMain';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\n\nimport './comicsList.scss';\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch (process) {\n        case 'waiting':\n            return <Spinner />;\n        case 'loading':\n            return newItemLoading ? <Component /> : <Spinner />;\n        case 'confirmed':\n            return <Component />;\n        case 'error':\n            return <ErrorMessage />;\n        default:\n            throw new Error('Unexpected process state');\n    }\n}\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setnewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const { getAllComics, process, setProcess } = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n        // eslint-disable-next-line\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setnewItemLoading(false) : setnewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n            .then(() => setProcess('confirmed'))\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n        setComicsList([...comicsList, ...newComicsList]);\n        setnewItemLoading(false);\n        setOffset(offset + 8);\n        setComicsEnded(ended);\n    }\n\n    function renderItems(arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\" />\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n\n    return (\n        <div className=\"comics__list\">\n            {setContent(process, () => renderItems(comicsList), newItemLoading)}\n            <button\n                disabled={newItemLoading}\n                style={{ 'display': comicsEnded ? 'none' : 'block' }}\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import AppBanner from '../appBanner/AppBanner'\r\nimport ComicsList from '../comicsList/ComicsList';\r\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <HelmetProvider>\r\n                <Helmet>\r\n                    <meta\r\n                        name=\"description\"\r\n                        content=\"Page with list of our comics\"\r\n                    />\r\n                    <title>Comics page</title>\r\n                </Helmet>\r\n                <AppBanner />\r\n                <ComicsList path='/comics' />\r\n            </HelmetProvider>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["setContent","process","Component","newItemLoading","ErrorMessage","Error","useState","comicsList","setComicsList","setnewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","useMarvelService","getAllComics","setProcess","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","className","arr","items","map","item","i","to","id","src","thumbnail","alt","title","price","renderItems","disabled","style","onClick","name","content","AppBanner","path","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}